@echo off
chcp 65001 >nul
setlocal enabledelayedexpansion

echo ========================================
echo    Sistema de Senhas IAAM - Instalador
echo ========================================
echo.

:: Definir vari√°veis
set "REPO_URL=https://github.com/seu-usuario/sistema_senhas_web2.git"
set "PROJECT_DIR=sistema_senhas_web2"
set "LOG_FILE=install_log.txt"

:: Criar arquivo de log
echo [%date% %time%] Iniciando instala√ß√£o do Sistema de Senhas IAAM > %LOG_FILE%

:: Verificar se Git est√° instalado
echo [%date% %time%] Verificando Git... >> %LOG_FILE%
git --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Git n√£o encontrado!
    echo üì• Baixando Git...
    echo [%date% %time%] Git n√£o encontrado, baixando... >> %LOG_FILE%
    
    :: Baixar Git usando winget ou curl
    winget install --id Git.Git -e --source winget >nul 2>&1
    if %errorlevel% neq 0 (
        echo ‚ùå Erro ao instalar Git via winget
        echo üì• Tentando baixar manualmente...
        echo [%date% %time%] Erro ao instalar Git via winget >> %LOG_FILE%
        
        :: Baixar Git usando curl
        curl -L -o git-installer.exe "https://github.com/git-for-windows/git/releases/download/v2.43.0.windows.1/Git-2.43.0-64-bit.exe"
        if exist git-installer.exe (
            echo üîß Instalando Git...
            start /wait git-installer.exe /VERYSILENT /NORESTART
            del git-installer.exe
        ) else (
            echo ‚ùå N√£o foi poss√≠vel baixar o Git
            echo [%date% %time%] Falha ao baixar Git >> %LOG_FILE%
            pause
            exit /b 1
        )
    )
    
    :: Recarregar PATH
    call refreshenv >nul 2>&1
    if %errorlevel% neq 0 (
        set "PATH=%PATH%;C:\Program Files\Git\bin"
    )
)

echo ‚úÖ Git encontrado/instalado
echo [%date% %time%] Git OK >> %LOG_FILE%

:: Verificar se Python est√° instalado
echo [%date% %time%] Verificando Python... >> %LOG_FILE%
python --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Python n√£o encontrado!
    echo üì• Baixando Python...
    echo [%date% %time%] Python n√£o encontrado, baixando... >> %LOG_FILE%
    
    :: Baixar Python usando winget
    winget install --id Python.Python.3.11 -e --source winget >nul 2>&1
    if %errorlevel% neq 0 (
        echo ‚ùå Erro ao instalar Python via winget
        echo üì• Tentando baixar manualmente...
        echo [%date% %time%] Erro ao instalar Python via winget >> %LOG_FILE%
        
        :: Baixar Python usando curl
        curl -L -o python-installer.exe "https://www.python.org/ftp/python/3.11.8/python-3.11.8-amd64.exe"
        if exist python-installer.exe (
            echo üîß Instalando Python...
            start /wait python-installer.exe /quiet InstallAllUsers=1 PrependPath=1 Include_test=0
            del python-installer.exe
        ) else (
            echo ‚ùå N√£o foi poss√≠vel baixar o Python
            echo [%date% %time%] Falha ao baixar Python >> %LOG_FILE%
            pause
            exit /b 1
        )
    )
    
    :: Recarregar PATH
    call refreshenv >nul 2>&1
    if %errorlevel% neq 0 (
        set "PATH=%PATH%;C:\Users\%USERNAME%\AppData\Local\Programs\Python\Python311;C:\Users\%USERNAME%\AppData\Local\Programs\Python\Python311\Scripts"
    )
)

echo ‚úÖ Python encontrado/instalado
echo [%date% %time%] Python OK >> %LOG_FILE%

:: Verificar se o projeto j√° existe
if exist "%PROJECT_DIR%" (
    echo üìÅ Projeto j√° existe, atualizando...
    echo [%date% %time%] Projeto existe, atualizando... >> %LOG_FILE%
    cd %PROJECT_DIR%
    git pull origin main >nul 2>&1
    if %errorlevel% neq 0 (
        echo ‚ö†Ô∏è Erro ao atualizar, tentando clonar novamente...
        echo [%date% %time%] Erro ao atualizar, clonando novamente... >> %LOG_FILE%
        cd ..
        rmdir /s /q %PROJECT_DIR%
        goto :clone_repo
    )
) else (
    echo üì• Clonando reposit√≥rio...
    echo [%date% %time%] Clonando reposit√≥rio... >> %LOG_FILE%
    :clone_repo
    git clone %REPO_URL% %PROJECT_DIR% >nul 2>&1
    if %errorlevel% neq 0 (
        echo ‚ùå Erro ao clonar reposit√≥rio
        echo [%date% %time%] Erro ao clonar reposit√≥rio >> %LOG_FILE%
        echo.
        echo üí° Verifique se:
        echo    - A URL do reposit√≥rio est√° correta
        echo    - Voc√™ tem acesso √† internet
        echo    - O reposit√≥rio existe e √© p√∫blico
        pause
        exit /b 1
    )
)

echo ‚úÖ Reposit√≥rio baixado/atualizado
echo [%date% %time%] Reposit√≥rio OK >> %LOG_FILE%

:: Entrar no diret√≥rio do projeto
cd %PROJECT_DIR%

:: Verificar se o ambiente virtual existe
if not exist "venv" (
    echo üîß Criando ambiente virtual...
    echo [%date% %time%] Criando ambiente virtual... >> ..\%LOG_FILE%
    python -m venv venv >nul 2>&1
    if %errorlevel% neq 0 (
        echo ‚ùå Erro ao criar ambiente virtual
        echo [%date% %time%] Erro ao criar ambiente virtual >> ..\%LOG_FILE%
        pause
        exit /b 1
    )
)

echo ‚úÖ Ambiente virtual OK
echo [%date% %time%] Ambiente virtual OK >> ..\%LOG_FILE%

:: Ativar ambiente virtual
echo üîß Ativando ambiente virtual...
echo [%date% %time%] Ativando ambiente virtual... >> ..\%LOG_FILE%
call venv\Scripts\activate.bat

:: Atualizar pip
echo üì¶ Atualizando pip...
echo [%date% %time%] Atualizando pip... >> ..\%LOG_FILE%
python -m pip install --upgrade pip >nul 2>&1

:: Instalar depend√™ncias
echo üì¶ Instalando depend√™ncias...
echo [%date% %time%] Instalando depend√™ncias... >> ..\%LOG_FILE%
pip install -r requirements.txt >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Erro ao instalar depend√™ncias
    echo [%date% %time%] Erro ao instalar depend√™ncias >> ..\%LOG_FILE%
    pause
    exit /b 1
)

echo ‚úÖ Depend√™ncias instaladas
echo [%date% %time%] Depend√™ncias OK >> ..\%LOG_FILE%

:: Configurar banco de dados
echo üóÑÔ∏è Configurando banco de dados...
echo [%date% %time%] Configurando banco de dados... >> ..\%LOG_FILE%
python recriar_banco.py >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ö†Ô∏è Erro ao configurar banco de dados, continuando...
    echo [%date% %time%] Erro ao configurar banco de dados >> ..\%LOG_FILE%
)

echo ‚úÖ Banco de dados configurado
echo [%date% %time%] Banco de dados OK >> ..\%LOG_FILE%

:: Criar script de inicializa√ß√£o
echo üöÄ Criando script de inicializa√ß√£o...
echo [%date% %time%] Criando script de inicializa√ß√£o... >> ..\%LOG_FILE%

(
echo @echo off
echo chcp 65001 ^>nul
echo echo ========================================
echo echo    Sistema de Senhas IAAM
echo echo ========================================
echo echo.
echo echo üîß Iniciando sistema...
echo echo.
echo cd /d "%~dp0%PROJECT_DIR%"
echo call venv\Scripts\activate.bat
echo python run.py
echo pause
) > "..\Iniciar Sistema.bat"

echo ‚úÖ Script de inicializa√ß√£o criado
echo [%date% %time%] Script de inicializa√ß√£o OK >> ..\%LOG_FILE%

:: Criar atalho no desktop
echo üîó Criando atalho no desktop...
echo [%date% %time%] Criando atalho no desktop... >> ..\%LOG_FILE%
copy "..\Iniciar Sistema.bat" "%USERPROFILE%\Desktop\Sistema de Senhas IAAM.bat" >nul 2>&1

echo ‚úÖ Atalho criado no desktop
echo [%date% %time%] Atalho OK >> ..\%LOG_FILE%

:: Mostrar informa√ß√µes finais
echo.
echo ========================================
echo    ‚úÖ Instala√ß√£o Conclu√≠da!
echo ========================================
echo.
echo üìÅ Sistema instalado em: %CD%
echo üåê Acesse: http://localhost:5003
echo üë§ Usu√°rio padr√£o: admin
echo üîë Senha padr√£o: admin123
echo.
echo üöÄ Para iniciar o sistema:
echo    1. Execute "Iniciar Sistema.bat" ou
echo    2. Clique no atalho no desktop
echo.
echo [%date% %time%] Instala√ß√£o conclu√≠da com sucesso! >> ..\%LOG_FILE%

:: Perguntar se quer iniciar agora
set /p "start_now=Deseja iniciar o sistema agora? (s/n): "
if /i "%start_now%"=="s" (
    echo.
    echo üöÄ Iniciando sistema...
    echo [%date% %time%] Iniciando sistema... >> ..\%LOG_FILE%
    python run.py
) else (
    echo.
    echo ‚úÖ Instala√ß√£o conclu√≠da! Execute "Iniciar Sistema.bat" quando quiser usar o sistema.
)

pause 