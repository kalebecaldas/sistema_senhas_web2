#!/bin/bash

# Script de Atualiza√ß√£o Segura do Sistema de Senhas
# Uso: ./update_system.sh

set -e  # Parar em caso de erro

echo "üîÑ Iniciando atualiza√ß√£o do Sistema de Senhas..."
echo "================================================"

# Verificar se estamos no diret√≥rio correto
if [ ! -f "run.py" ]; then
    echo "‚ùå Erro: Execute este script no diret√≥rio raiz do projeto"
    exit 1
fi

# Verificar se √© um reposit√≥rio Git
if [ ! -d ".git" ]; then
    echo "‚ùå Erro: Este n√£o √© um reposit√≥rio Git"
    exit 1
fi

# Verificar se √© o reposit√≥rio oficial
REMOTE_URL=$(git config --get remote.origin.url)
if [[ ! "$REMOTE_URL" == *"kalebecaldas/sistema_senhas_web2"* ]]; then
    echo "‚ùå Erro: Reposit√≥rio n√£o autorizado: $REMOTE_URL"
    exit 1
fi

echo "‚úÖ Reposit√≥rio oficial verificado"

# Fazer backup
echo "üì¶ Fazendo backup das configura√ß√µes..."
BACKUP_DIR="backups/manual_$(date +%Y%m%d_%H%M%S)"
mkdir -p "$BACKUP_DIR"

# Arquivos importantes para backup
IMPORTANT_FILES=(
    "instance/sistema.db"
    "app/config.py"
    "VERSION"
    "requirements.txt"
)

for file in "${IMPORTANT_FILES[@]}"; do
    if [ -f "$file" ]; then
        cp "$file" "$BACKUP_DIR/"
        echo "  ‚úÖ Backup: $file"
    else
        echo "  ‚ö†Ô∏è  Arquivo n√£o encontrado: $file"
    fi
done

echo "‚úÖ Backup salvo em: $BACKUP_DIR"

# Verificar atualiza√ß√µes dispon√≠veis
echo "üîç Verificando atualiza√ß√µes..."
git fetch origin

COMMITS_AHEAD=$(git rev-list HEAD..origin/main --count)
if [ "$COMMITS_AHEAD" -eq 0 ]; then
    echo "‚úÖ Sistema j√° est√° atualizado"
    exit 0
fi

echo "üì• Encontradas $COMMITS_AHEAD atualiza√ß√µes dispon√≠veis"

# Confirmar atualiza√ß√£o
read -p "Deseja continuar com a atualiza√ß√£o? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå Atualiza√ß√£o cancelada"
    exit 0
fi

# Fazer pull das atualiza√ß√µes
echo "‚¨áÔ∏è  Baixando atualiza√ß√µes..."
git pull origin main

# Verificar se requirements.txt foi modificado
if git diff --name-only HEAD~1 HEAD | grep -q "requirements.txt"; then
    echo "üì¶ Atualizando depend√™ncias..."
    pip install -r requirements.txt --upgrade
    echo "‚úÖ Depend√™ncias atualizadas"
else
    echo "‚ÑπÔ∏è  Nenhuma depend√™ncia nova"
fi

# Verificar se h√° migra√ß√µes de banco
if [ -f "app/migrar_colunas.py" ]; then
    echo "üóÑÔ∏è  Executando migra√ß√µes de banco..."
    python app/migrar_colunas.py
    echo "‚úÖ Migra√ß√µes conclu√≠das"
fi

echo "================================================"
echo "‚úÖ Atualiza√ß√£o conclu√≠da com sucesso!"
echo "üì¶ Backup salvo em: $BACKUP_DIR"
echo "üîÑ Reinicie o sistema para aplicar as mudan√ßas"
echo "================================================" 